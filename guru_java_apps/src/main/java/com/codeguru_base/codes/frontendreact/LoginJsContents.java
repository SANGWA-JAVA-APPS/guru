/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.codeguru_base.codes.frontendreact;

import com.codeguru_base.util.Utils;

/**
 *
 * @author SANGWA Emmanuel code [CODEGURU - info@codeguru.com]
 */
public class LoginJsContents extends Utils {

    public String LoginJsContents() {
        return "import React, { useState } from 'react'\n"
                + "\n"
                + "// import Title from './forms/Title'\n"
                + "import axios from \"axios\"\n"
                + "import OtherStyles from './Styles/OtherStyles';\n"
                + "\n"
                + "import { useNavigate } from \"react-router-dom\";\n"
                + "import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n"
                + "import Commons from '../Services/Commons';\n"
                + "import SessionTime from '../Services/SessionTime';\n"
                + "import Buttons from './Global/Buttons';\n"
                + "\n"
                + "\n"
                + "function Login() {\n"
                + "    const [username, setUsername] = useState(\"\")\n"
                + "    const [password, setPassword] = useState(\"\")\n"
                + "    const [loginStatus, setLoginStatus] = useState(\"default\")   //default, failed, success\n"
                + "    const [showLoader, setShowLoader] = useState(false)\n"
                + "    const [backedNotConnected, setBackedNotConnected] = useState(false)\n"
                + "    const navigate = useNavigate();\n"
                + "\n"
                + "\n"
                + "\n"
                + "    const onSubmitHandler = (e) => {\n"
                + "        e.preventDefault()\n"
                + "        setShowLoader(true)\n"
                + "\n"
                + "        //var url = Commons.getLogin(username,password);\n"
                + "\n"
                + "        Commons.getLogin(username, password).then((res) => {\n"
                + "            console.log('After Login ..................')\n"
                + "            console.log(res.data)\n"
                + "\n"
                + "            if (res.data == null || res.data == '') {\n"
                + "                console.log('Login Failed')\n"
                + "                setLoginStatus('failed')\n"
                + "                document.getElementById(\"Form\").reset();\n"
                + "            } else {\n"
                + "                const d = new Date()\n"
                + "                const timeStr =d.toLocaleTimeString()\n"
                + "                const min=SessionTime.getMinutes(timeStr)\n"
                + "                \n"
                + "                setLoginStatus('success')\n"
                + "                localStorage.setItem('userId', res.data.id)\n"
                + "                localStorage.setItem('LoginTime', timeStr)\n"
                + "                localStorage.setItem(\"min\", SessionTime.getMinutes(new Date().toLocaleTimeString()))\n"
                + "                localStorage.setItem('ExpireTime', new Date().toLocaleTimeString() + 5)\n"
                + "                console.log('userId: ' + localStorage.getItem('userId'))\n"
                + "                window.location.href = \"/client\"\n"
                + "            }\n"
                + "        }).catch(function (error) {\n"
                + "            if (error.response) {\n"
                + "                // The request was made and the server responded with a status code\n"
                + "                // that falls out of the range of 2xx\n"
                + "                // console.log(error.response.data);\n"
                + "                // console.log(error.response.status);\n"
                + "                // console.log(error.response.headers);\n"
                + "            } else if (error.request) {\n"
                + "                setLoginStatus('failed')\n"
                + "                setBackedNotConnected(true)\n"
                + "                // The request was made but no response was received\n"
                + "                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n"
                + "                // http.ClientRequest in node.js\n"
                + "                // console.log(error.request);\n"
                + "            } else {\n"
                + "                // Something happened in setting up the request that triggered an Error\n"
                + "                // console.log('Error', error.message);\n"
                + "            }\n"
                + "            // console.log(error.config);\n"
                + "\n"
                + "        });\n"
                + "    };\n"
                + "    const removeAlert = () => {\n"
                + "        setLoginStatus('default')\n"
                + "    }\n"
                + "    return (\n"
                + "        <div className='container-fluid border border-dark loginBg ' style={{ height: window.innerHeight }}>\n"
                + "\n"
                + "            <div className='row d-flex justify-content-center d-flex  ' style={{ marginTop: \"70px\" }}>\n"
                + "                <div className='col-6'>\n"
                + "                    {(loginStatus == 'failed') &&\n"
                + "                        <div class=\"alert alert-danger text-center\" role=\"alert\">\n"
                + "                            Login Failed {backedNotConnected && \" - The Logic not conntected!\"}\n"
                + "                        </div>}\n"
                + "                    <form onSubmit={onSubmitHandler} id=\"Form\">\n"
                + "                        <div className=\"form-row   formPane p-3 mt-3\" style={{ border: \"2px solid #b016be\" }}>\n"
                + "                            <h2 style={{ fontWeight: \"bolder\" }}>  Login </h2>\n"
                + "                            <div class=\"form-group row m-3\">\n"
                + "                                <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Username</label>\n"
                + "                                <div class=\"col-sm-10\">\n"
                + "                                    <input type=\"text\" onClick={removeAlert} name='username' required autoComplete='false' style={OtherStyles.txt()} className=\"form-control\" onChange={(event) => setUsername(event.target.value)} id=\"username\" />\n"
                + "                                </div>\n"
                + "                            </div>\n"
                + "                            <div class=\"form-group row m-3\">\n"
                + "                                <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label>\n"
                + "                                <div class=\"col-sm-10\">\n"
                + "                                    <input type=\"password\" name='password' required autoComplete='false' style={OtherStyles.txt()} className=\"form-control\" onChange={(event) => setPassword(event.target.value)} id=\"password\" />\n"
                + "                                </div>\n"
                + "                            </div>\n"
                + "                            <div className='container px-5'>\n"
                + "                                <Buttons caption=\"Login\" id=\"liveToastBtn\" />\n"
                + "                            </div>\n"
                + "                        </div>\n"
                + "                    </form>\n"
                + "                </div>\n"
                + "            </div>\n"
                + "        </div>\n"
                + "    )\n"
                + "}\n"
                + "\n"
                + "export default Login";
    }
}
